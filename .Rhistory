)
)
runApp('shiny app/3. appCode.R')
#Start the app
ui <- fluidPage(
tags$div(class = "app-container",
#Add logo
fluidRow(
div(class = "right-image",
tags$img(src = "MedGermDB_LOGO.png", height = "200px", width = "500px"),
column(
width = 3,
# Content of the first column
)))),
#Add title
fluidRow(
column(
width = 12,
div(class = "right-title",
titlePanel("a Germination Database for Mediterranean plants", windowTitle = "a Germination Database for Mediterranean plants"),
# )
))),
#Sidebar to choose species to display
selectizeInput("spp", label = "Species", choices = spp, selected = spp[1]),
fluidRow(
column(width = 12,
plotOutput("plot_map", width = "800px", height = "400px"))),  # Add your actual figure output here
mainPanel(plotOutput("plot_germination"), #Mean germination proportions
br(),  # Add a line break to create space between elements
tags$div(
style = "text-align: center; font-size: 16px; font-weight: bold; margin-bottom: 10px;",
"Taxonomic information"),
tableOutput("taxa"),
tags$div(
style = "text-align: center; font-size: 16px; font-weight: bold; margin-bottom: 10px;",
"EUNIS HABITAT INFORMATION"),
tableOutput("habitats"),
tableOutput("table"), #To define: 1. References 2.Taxonomic info 3. Number of records
# Add Bookmark Button
bookmarkButton()
)
)
# Define server
server <- function(input, output) {
output$plot_map <- renderPlot({
# filter by species
x <- coord_sf %>%
filter(coord_sf$accepted_binomial == input$spp)
# draw the map for the species
mapplot(coord_sf = x)
})
output$plot_germination <- renderPlot({
# filter by species
y <- Germination %>%
filter(Germination$species == input$spp)
# draw the germination plot for the species
seedplot(Germination = y)
})
output$taxa <- renderTable({
taxanomic(taxa.file, input$spp)
})
output$habitats <- renderTable({
habitat(habitat.file, input$spp)
})
output$table <- renderTable({
references(dat1, input$spp)
})
}
# Run the application
shinyApp(ui = ui, server = server)
#Visualization app
library(maps); library(dplyr)
load("results/appdata.RData")
#Map
mapplot <- function(coord_sf) {
ggplot() +
geom_sf(data = world, fill = "gainsboro", color = "darkgray") +
geom_sf(data = shapefile, fill = rgb(0, 1, 0, alpha = 0.1), color ="darkgray")+
geom_sf(data = coord_sf, color = "black", size = 3, alpha = 0.8)+
labs(title = "Origin of the germination records.",
subtitle = "The golden circles are the coordinates of the seed lots used in the experiments")+
theme_minimal() +  # Use theme_minimal as a base theme
theme(axis.line=element_blank(), axis.text.x=element_blank(),
axis.text.y=element_blank(), axis.ticks=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank(),
legend.position="none", panel.background=element_blank(),
panel.border=element_blank(), panel.grid.major=element_blank(),
panel.grid.minor=element_blank(), plot.background=element_blank(),
text = element_text(size = 12),
plot.title = element_text(face = c("bold"), size = 14),
plot.subtitle = element_text(face = c("italic")))
}
ggplot() +
geom_sf(data = world, fill = "gainsboro", color = "darkgray") +
geom_sf(data = shapefile, fill = rgb(0, 1, 0, alpha = 0.1), color ="darkgray")+
geom_sf(data = coord_sf, color = "black", size = 3, alpha = 0.8)+
labs(title = "Origin of the germination records.",
subtitle = "The golden circles are the coordinates of the seed lots used in the experiments")+
theme_minimal() +  # Use theme_minimal as a base theme
theme(axis.line=element_blank(), axis.text.x=element_blank(),
axis.text.y=element_blank(), axis.ticks=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank(),
legend.position="none", panel.background=element_blank(),
panel.border=element_blank(), panel.grid.major=element_blank(),
panel.grid.minor=element_blank(), plot.background=element_blank(),
text = element_text(size = 12),
plot.title = element_text(face = c("bold"), size = 14),
plot.subtitle = element_text(face = c("italic")))
#Visualization app
library(maps); library(dplyr); library(ggplot2);
ggplot() +
geom_sf(data = world, fill = "gainsboro", color = "darkgray") +
geom_sf(data = shapefile, fill = rgb(0, 1, 0, alpha = 0.1), color ="darkgray")+
geom_sf(data = coord_sf, color = "black", size = 3, alpha = 0.8)+
labs(title = "Origin of the germination records.",
subtitle = "The golden circles are the coordinates of the seed lots used in the experiments")+
theme_minimal() +  # Use theme_minimal as a base theme
theme(axis.line=element_blank(), axis.text.x=element_blank(),
axis.text.y=element_blank(), axis.ticks=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank(),
legend.position="none", panel.background=element_blank(),
panel.border=element_blank(), panel.grid.major=element_blank(),
panel.grid.minor=element_blank(), plot.background=element_blank(),
text = element_text(size = 12),
plot.title = element_text(face = c("bold"), size = 14),
plot.subtitle = element_text(face = c("italic")))
#Germination plot
seedplot <- function(Germination) {
ggplot(Germination, aes(x = as.factor(temperature), y = mean, ymin = lower, ymax = upper, fill = Experiment)) +
geom_bar(stat = "identity", alpha = 0.6, show.legend = FALSE) +
geom_errorbar(aes(color = Experiment), width = 0.1, size = 1,
position = position_dodge(.9), show.legend = FALSE) +
coord_cartesian(ylim = c(0, 1)) +
labs(title = "Seed germination tests", subtitle = "Bars are the mean germination proportions,\n brackets the binomial confidence intervals.") +
ylab(label = "Germination proportion") + xlab(label = "Average germination temperature (C)") +
theme(text = element_text(size = 12),
plot.title = element_text(face = c("bold"), size = 14),
plot.subtitle = element_text(face = c("italic"))) +
theme(panel.background = element_blank(),panel.grid.minor = element_line(color = "gainsboro"))+
facet_wrap( ~ Experiment, scales = "free", ncol = 4)
}
ggplot(Germination, aes(x = as.factor(temperature), y = mean, ymin = lower, ymax = upper, fill = Experiment)) +
geom_bar(stat = "identity", alpha = 0.6, show.legend = FALSE) +
geom_errorbar(aes(color = Experiment), width = 0.1, size = 1,
position = position_dodge(.9), show.legend = FALSE) +
coord_cartesian(ylim = c(0, 1)) +
labs(title = "Seed germination tests", subtitle = "Bars are the mean germination proportions,\n brackets the binomial confidence intervals.") +
ylab(label = "Germination proportion") + xlab(label = "Average germination temperature (C)") +
theme(text = element_text(size = 12),
plot.title = element_text(face = c("bold"), size = 14),
plot.subtitle = element_text(face = c("italic"))) +
theme(panel.background = element_blank(),panel.grid.minor = element_line(color = "gainsboro"))+
facet_wrap( ~ Experiment, scales = "free", ncol = 4)
#References table
references <- function(df1 = dat1, sp = "Achillea maritima") {
filter(df1, accepted_binomial == sp) %>%
select(doi) %>%
unique %>%
arrange(doi) %>%
rename(Doi = doi) %>%
as_tibble
}
#Taxonomic information
taxanomic <- function(df2 = taxa.file, sp = "Achillea maritima") {
filter(df2,accepted_binomial == sp) %>%
select(EUNIS_name,accepted_binomial, family, order, APG_clade) %>%
as_tibble
}
#Habitat information
habitat <- function(habitat.file, sp = "Achillea maritima") {
filter(habitat.file,accepted_binomial == sp) %>%
select(species_type,Habitat_level.1, Habitat_level.3) %>%
as_tibble
}
library(shiny); runApp('shiny app/3. appCode.R')
#Load MedGermDB Germination File
dat1 <- read.csv("data/GerminationFile.csv")
#Load MedGermDB Taxa File
taxa.file = read.csv("data/TaxaFile.csv",header = TRUE, sep = ";", quote = "\"", stringsAsFactors = FALSE)
#Load MedGermDB Habitat File
habitat.file = read.csv("data/HabitatFile.csv",header = TRUE, sep = ",", quote = "\"", stringsAsFactors = FALSE)
# Load coordinates spacial data frame
#coord_sf <- st_read("data/coord_sf.shp")
coord_sf <- readRDS("data/coord_sf.rds")
# Load Germination grouped data
df <- fread("data/df.csv")
#Visualization app
library(maps); library(dplyr); library(ggplot2);library(data.table)
#Load packages
library(dplyr); library(sp); library(readr); library(tidyr)
library(metafor); library(binom); library(data.table);
library(ggplot2); library(sf); library(data.table)
#Load files for the app  ************#
#Load MedGermDB Germination File
dat1 <- read.csv("data/GerminationFile.csv")
#Load MedGermDB Taxa File
taxa.file = read.csv("data/TaxaFile.csv",header = TRUE, sep = ";", quote = "\"", stringsAsFactors = FALSE)
#Load MedGermDB Habitat File
habitat.file = read.csv("data/HabitatFile.csv",header = TRUE, sep = ",", quote = "\"", stringsAsFactors = FALSE)
# Load coordinates spacial data frame
#coord_sf <- st_read("data/coord_sf.shp")
coord_sf <- readRDS("data/coord_sf.rds")
# Load Germination grouped data
df <- fread("data/df.csv")
# Load map files
shapefile <- st_read("data/Map files/MedBasin_21-07-23.shp")
world  <- st_read("data/Map files/WorldRectMap.shp")
save(Germination, dat1, shapefile, world,coord_sf,dat1,taxa.file,habitat.file,
file = here::here("results", "appdata.RData"))
#Visualization app
library(maps); library(dplyr); library(ggplot2);library(data.table)
load("results/appdata.RData")
#Map
mapplot <- function(coord_sf) {
ggplot() +
geom_sf(data = world, fill = "gainsboro", color = "darkgray") +
geom_sf(data = shapefile, fill = rgb(0, 1, 0, alpha = 0.1), color ="darkgray")+
geom_sf(data = coord_sf, color = "black", size = 3, alpha = 0.8)+
labs(title = "Origin of the germination records.",
subtitle = "The golden circles are the coordinates of the seed lots used in the experiments")+
theme_minimal() +  # Use theme_minimal as a base theme
theme(axis.line=element_blank(), axis.text.x=element_blank(),
axis.text.y=element_blank(), axis.ticks=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank(),
legend.position="none", panel.background=element_blank(),
panel.border=element_blank(), panel.grid.major=element_blank(),
panel.grid.minor=element_blank(), plot.background=element_blank(),
text = element_text(size = 12),
plot.title = element_text(face = c("bold"), size = 14),
plot.subtitle = element_text(face = c("italic")))
}
#Germination plot
seedplot <- function(Germination) {
ggplot(Germination, aes(x = as.factor(temperature), y = mean, ymin = lower, ymax = upper, fill = Experiment)) +
geom_bar(stat = "identity", alpha = 0.6, show.legend = FALSE) +
geom_errorbar(aes(color = Experiment), width = 0.1, size = 1,
position = position_dodge(.9), show.legend = FALSE) +
coord_cartesian(ylim = c(0, 1)) +
labs(title = "Seed germination tests", subtitle = "Bars are the mean germination proportions,\n brackets the binomial confidence intervals.") +
ylab(label = "Germination proportion") + xlab(label = "Average germination temperature (C)") +
theme(text = element_text(size = 12),
plot.title = element_text(face = c("bold"), size = 14),
plot.subtitle = element_text(face = c("italic"))) +
theme(panel.background = element_blank(),panel.grid.minor = element_line(color = "gainsboro"))+
facet_wrap( ~ Experiment, scales = "free", ncol = 4)
}
#References table
references <- function(df1 = dat1, sp = "Achillea maritima") {
filter(df1, accepted_binomial == sp) %>%
select(doi) %>%
unique %>%
arrange(doi) %>%
rename(Doi = doi) %>%
as_tibble
}
#Taxonomic information
taxanomic <- function(df2 = taxa.file, sp = "Achillea maritima") {
filter(df2,accepted_binomial == sp) %>%
select(EUNIS_name,accepted_binomial, family, order, APG_clade) %>%
as_tibble
}
#Habitat information
habitat <- function(habitat.file, sp = "Achillea maritima") {
filter(habitat.file,accepted_binomial == sp) %>%
select(species_type,Habitat_level.1, Habitat_level.3) %>%
as_tibble
}
runApp('shiny app/3. appCode.R')
runApp('shiny app/3. appCode.R')
fluidRow(
div(class = "right-image",
tags$img(src = "MedGermDB_LOGOS.png", height = "200px", width = "500px"),
column(
width = 3,
# Content of the first column
))))
runApp('shiny app/3. appCode.R')
#Visualization app
library(maps); library(dplyr); library(ggplot2);library(data.table)
load("results/appdata.RData")
#Map
mapplot <- function(coord_sf) {
ggplot() +
geom_sf(data = world, fill = "gainsboro", color = "darkgray") +
geom_sf(data = shapefile, fill = rgb(0, 1, 0, alpha = 0.1), color ="darkgray")+
geom_sf(data = coord_sf, color = "black", size = 3, alpha = 0.8)+
labs(title = "Origin of the germination records.",
subtitle = "The golden circles are the coordinates of the seed lots used in the experiments")+
theme_minimal() +  # Use theme_minimal as a base theme
theme(axis.line=element_blank(), axis.text.x=element_blank(),
axis.text.y=element_blank(), axis.ticks=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank(),
legend.position="none", panel.background=element_blank(),
panel.border=element_blank(), panel.grid.major=element_blank(),
panel.grid.minor=element_blank(), plot.background=element_blank(),
text = element_text(size = 12),
plot.title = element_text(face = c("bold"), size = 14),
plot.subtitle = element_text(face = c("italic")))
}
#Germination plot
seedplot <- function(Germination) {
ggplot(Germination, aes(x = as.factor(temperature), y = mean, ymin = lower, ymax = upper, fill = Experiment)) +
geom_bar(stat = "identity", alpha = 0.6, show.legend = FALSE) +
geom_errorbar(aes(color = Experiment), width = 0.1, size = 1,
position = position_dodge(.9), show.legend = FALSE) +
coord_cartesian(ylim = c(0, 1)) +
labs(title = "Seed germination tests", subtitle = "Bars are the mean germination proportions,\n brackets the binomial confidence intervals.") +
ylab(label = "Germination proportion") + xlab(label = "Average germination temperature (C)") +
theme(text = element_text(size = 12),
plot.title = element_text(face = c("bold"), size = 14),
plot.subtitle = element_text(face = c("italic"))) +
theme(panel.background = element_blank(),panel.grid.minor = element_line(color = "gainsboro"))+
facet_wrap( ~ Experiment, scales = "free", ncol = 4)
}
#References table
references <- function(df1 = dat1, sp = "Achillea maritima") {
filter(df1, accepted_binomial == sp) %>%
select(doi) %>%
unique %>%
arrange(doi) %>%
rename(Doi = doi) %>%
as_tibble
}
#Taxonomic information
taxanomic <- function(df2 = taxa.file, sp = "Achillea maritima") {
filter(df2,accepted_binomial == sp) %>%
select(EUNIS_name,accepted_binomial, family, order, APG_clade) %>%
as_tibble
}
#Habitat information
habitat <- function(habitat.file, sp = "Achillea maritima") {
filter(habitat.file,accepted_binomial == sp) %>%
select(species_type,Habitat_level.1, Habitat_level.3) %>%
as_tibble
}
runApp('shiny app/3. appCode.R')
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
library(tidyverse); library(maps); library(here)
#Create the species list
spp <- dat1 %>% select(accepted_binomial) %>% arrange(accepted_binomial) %>% pull(accepted_binomial) %>% unique %>% as.character
#Center title and logo
tags$head(
tags$style(
HTML("
.center-image {
display: flex;
justify-content: center;
align-items: center;
}
.right-title {
text-align: right;
margin-top: 2000px;
}
.app-container {
margin-left: 2000px;
}
")
)
)
#Start the app
ui <- fluidPage(
tags$div(class = "app-container",
#Add logo
fluidRow(
div(class = "right-image",
tags$img(src = "www/MedGermDB_LOGOS.png", height = "200px", width = "500px"),
column(
width = 3,
# Content of the first column
)))),
#Add title
fluidRow(
column(
width = 12,
div(class = "right-title",
titlePanel("a Germination Database for Mediterranean plants", windowTitle = "a Germination Database for Mediterranean plants"),
# )
))),
#Sidebar to choose species to display
selectizeInput("spp", label = "Species", choices = spp, selected = spp[1]),
fluidRow(
column(width = 12,
plotOutput("plot_map", width = "800px", height = "400px"))),  # Add your actual figure output here
mainPanel(plotOutput("plot_germination"), #Mean germination proportions
br(),  # Add a line break to create space between elements
tags$div(
style = "text-align: center; font-size: 16px; font-weight: bold; margin-bottom: 10px;",
"Taxonomic information"),
tableOutput("taxa"),
tags$div(
style = "text-align: center; font-size: 16px; font-weight: bold; margin-bottom: 10px;",
"EUNIS HABITAT INFORMATION"),
tableOutput("habitats"),
tableOutput("table"), #To define: 1. References 2.Taxonomic info 3. Number of records
# Add Bookmark Button
bookmarkButton()
)
)
# Define server
server <- function(input, output) {
output$plot_map <- renderPlot({
# filter by species
x <- coord_sf %>%
filter(coord_sf$accepted_binomial == input$spp)
# draw the map for the species
mapplot(coord_sf = x)
})
output$plot_germination <- renderPlot({
# filter by species
y <- Germination %>%
filter(Germination$species == input$spp)
# draw the germination plot for the species
seedplot(Germination = y)
})
output$taxa <- renderTable({
taxanomic(taxa.file, input$spp)
})
output$habitats <- renderTable({
habitat(habitat.file, input$spp)
})
output$table <- renderTable({
references(dat1, input$spp)
})
}
# Run the application
shinyApp(ui = ui, server = server)
runApp('shiny app/3. appCode.R')
runApp('shiny app/3. appCode.R')
#Visualization app
library(maps); library(dplyr); library(ggplot2);library(data.table)
load("results/appdata.RData")
#Map
mapplot <- function(coord_sf) {
ggplot() +
geom_sf(data = world, fill = "gainsboro", color = "darkgray") +
geom_sf(data = shapefile, fill = rgb(0, 1, 0, alpha = 0.1), color ="darkgray")+
geom_sf(data = coord_sf, color = "black", size = 3, alpha = 0.8)+
labs(title = "Origin of the germination records.",
subtitle = "The golden circles are the coordinates of the seed lots used in the experiments")+
theme_minimal() +  # Use theme_minimal as a base theme
theme(axis.line=element_blank(), axis.text.x=element_blank(),
axis.text.y=element_blank(), axis.ticks=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank(),
legend.position="none", panel.background=element_blank(),
panel.border=element_blank(), panel.grid.major=element_blank(),
panel.grid.minor=element_blank(), plot.background=element_blank(),
text = element_text(size = 12),
plot.title = element_text(face = c("bold"), size = 14),
plot.subtitle = element_text(face = c("italic")))
}
ggplot() +
geom_sf(data = world, fill = "gainsboro", color = "darkgray") +
geom_sf(data = shapefile, fill = rgb(0, 1, 0, alpha = 0.1), color ="darkgray")+
geom_sf(data = coord_sf, color = "black", size = 3, alpha = 0.8)+
labs(title = "Origin of the germination records.",
subtitle = "The golden circles are the coordinates of the seed lots used in the experiments")+
theme_minimal() +  # Use theme_minimal as a base theme
theme(axis.line=element_blank(), axis.text.x=element_blank(),
axis.text.y=element_blank(), axis.ticks=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank(),
legend.position="none", panel.background=element_blank(),
panel.border=element_blank(), panel.grid.major=element_blank(),
panel.grid.minor=element_blank(), plot.background=element_blank(),
text = element_text(size = 12),
plot.title = element_text(face = c("bold"), size = 14),
plot.subtitle = element_text(face = c("italic")))
#Germination plot
seedplot <- function(Germination) {
ggplot(Germination, aes(x = as.factor(temperature), y = mean, ymin = lower, ymax = upper, fill = Experiment)) +
geom_bar(stat = "identity", alpha = 0.6, show.legend = FALSE) +
geom_errorbar(aes(color = Experiment), width = 0.1, size = 1,
position = position_dodge(.9), show.legend = FALSE) +
coord_cartesian(ylim = c(0, 1)) +
labs(title = "Seed germination tests", subtitle = "Bars are the mean germination proportions,\n brackets the binomial confidence intervals.") +
ylab(label = "Germination proportion") + xlab(label = "Average germination temperature (C)") +
theme(text = element_text(size = 12),
plot.title = element_text(face = c("bold"), size = 14),
plot.subtitle = element_text(face = c("italic"))) +
theme(panel.background = element_blank(),panel.grid.minor = element_line(color = "gainsboro"))+
facet_wrap( ~ Experiment, scales = "free", ncol = 4)
}
#References table
references <- function(df1 = dat1, sp = "Achillea maritima") {
filter(df1, accepted_binomial == sp) %>%
select(doi) %>%
unique %>%
arrange(doi) %>%
rename(Doi = doi) %>%
as_tibble
}
#Taxonomic information
taxanomic <- function(df2 = taxa.file, sp = "Achillea maritima") {
filter(df2,accepted_binomial == sp) %>%
select(EUNIS_name,accepted_binomial, family, order, APG_clade) %>%
as_tibble
}
#Habitat information
habitat <- function(habitat.file, sp = "Achillea maritima") {
filter(habitat.file,accepted_binomial == sp) %>%
select(species_type,Habitat_level.1, Habitat_level.3) %>%
as_tibble
}
library(shiny); runApp('3. appCode.R')
runApp('3. appCode.R')
